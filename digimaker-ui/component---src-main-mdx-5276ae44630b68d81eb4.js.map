{"version":3,"sources":["webpack:///../src/Main.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","table","isToggle","of","Main","__position","__code","__scope","Playground","Props","isMDXComponent"],"mappings":"6SAUaA,EAAe,Q,oNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,QADR,QAGA,oEACA,kBACE,GAAM,SADR,SAGA,uBAAK,oBAAMC,WAAW,MAClB,UAAa,eADZ,8lDAuEL,kBACE,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,OAAO,EAAMC,UAAU,EAAMC,GAAIC,IAAML,QAAQ,UACtD,kBACE,GAAM,eADR,eAGA,YAAC,IAAD,CAAYM,WAAY,EAAGC,OAAQ,WAAYC,SAAO,GACpDT,QACAH,kBACAa,eACAC,UACAL,UALoD,gBAMpDT,IANoD,EAOpDH,eAPoD,GAQnDO,QAAQ,cACZ,YAAC,IAAD,CAAMA,QAAQ,gB,kNAMjBH,EAAWc,gBAAiB","file":"component---src-main-mdx-5276ae44630b68d81eb4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/xc/dev/digimaker-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Main from './Main';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"main\"\n    }}>{`Main`}</h1>\n    <p>{`Main provide the 'main' area of admin site.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//main settings\nconst mainConfig = {\n    folder: {\n      actions: [\n        (actionProps:ActionProps)=><SetPriority {...actionProps} />\n      ]\n    },\n    frontpage: {\n      list: ['frontpage_block'],\n    },  \n    role: {\n      view: true,\n    },\n    article: {\n      view: true,\n      metainfo:true,\n      actions: [      \n        (actionProps:ActionProps)=><Move {...actionProps} />\n      ],\n    },\n    user: {\n      view: true,\n      viewComponent: UserRoles,    \n    },\n  };\n\nconst getMainConfig =(content:any)=>{\n    return mainConfig[content.content_type]\n}\n\n//list settings\nconst getListConfig = (_parent: any, contenttype: string)=>{\n  const commonSettings = {\n    show_header: true,\n    show_table_header: true,\n    pagination: 10,\n    sort:[],\n    row_actions: [\n      {\n        link: '/edit/{_contenttype_id}?from=/main/{_from_id}',\n        name: 'Edit',\n        icon: 'icon-edit',\n      },\n      (actionProps:ActionProps)=><Delete {...actionProps} />\n    ]\n   }\n   return commonSettings;\n}\n\n//main in route\n<Route\n    path='/main/:id'\n    exact={true}\n    render={(route) => (\n        <Main\n            onLoad={(content)=>{     \n                //set current content for left menu use.           \n                setCurrent(content);\n            }}                                          \n            id={parseInt(route.match.params.id)}\n            getMainConfig={getMainConfig}\n            getListConfig={getListConfig}\n            redirect={(url: string) =>\n                commonAfterAction(route.history, 0, [url])}\n        />\n    )}\n/>\n\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props table={true} isToggle={true} of={Main} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<Main />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Main,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n   <Main mdxType=\"Main\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}