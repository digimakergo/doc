(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{CMLg:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return p})),t.d(n,"default",(function(){return f}));var o=t("Fcif"),i=t("+I+c"),a=(t("mXGw"),t("/FXl")),c=t("TjRS"),r=t("ZFoC"),l=t("On0s"),s=(t("aD51"),["components"]),p={};void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!Object.prototype.hasOwnProperty.call(p,"__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/actions/Implement.mdx"}});var b={_frontmatter:p},m=c.a;function f(e){var n=e.components,t=Object(i.a)(e,s);return Object(a.b)(m,Object(o.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"implement-action"},"Implement action"),Object(a.b)("p",null,"To implement an action, you need to create a component with props of ",Object(a.b)("inlineCode",{parentName:"p"},"ActionProps"),". Here is example from ",Object(a.b)("inlineCode",{parentName:"p"},"Delete")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"import {ActionProps, ContentActionParams} from 'digimaker-ui';\n\n\nconst Delete = (props:ActionProps) => {\n  const [shown, setShown] = React.useState(false);\n  const params = props.params as ContentActionParams;\n  //...\n}\n")),Object(a.b)("h3",{id:"actionprops"},"ActionProps"),Object(a.b)(r.d,{table:!0,of:l.a,mdxType:"Props"}),Object(a.b)("h3",{id:"action-from-content"},"Action from content"),Object(a.b)("p",null,"When ",Object(a.b)("inlineCode",{parentName:"p"},"fromview")," is ",Object(a.b)("inlineCode",{parentName:"p"},"content"),"(from main) or ",Object(a.b)("inlineCode",{parentName:"p"},"inline"),"(row_action in list)"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"ContentActionParams")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"export interface ContentActionParams{\n   /** from object */\n   from?: any;//eg.{id:22}\n\n   /** content on */\n   content:any; //todo: define 'any'\n   /** After action callback. redirect is useful when deleting itself. Note that redirect will be ignore in inline mode(list row) so it's safe to call true */\n   afterAction: (redirect?: boolean)=>void;\n}\n")),Object(a.b)("h3",{id:"action-from-list"},"Action from list"),Object(a.b)("p",null,"When ",Object(a.b)("inlineCode",{parentName:"p"},"fromview")," is ",Object(a.b)("inlineCode",{parentName:"p"},"list")," - from list's tool(above list)"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"ListActionParams")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"export interface ListActionParams{\n   /** selected content list */\n   selected: Array<any>; //todo: define any as content\n   /** config of the list, include eg. sort array */\n   listConfig: any; //todo: define\n\n   /** after action it will refresh list */\n   afterAction: (newConfig?:ListAfterActionConfig)=>void; //todo: define 'any'\n}\n")))}void 0!==f&&f&&f===Object(f)&&Object.isExtensible(f)&&!Object.prototype.hasOwnProperty.call(f,"__filemeta")&&Object.defineProperty(f,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/actions/Implement.mdx"}}),f.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-actions-implement-mdx-12576fce547fc443a1fa.js.map