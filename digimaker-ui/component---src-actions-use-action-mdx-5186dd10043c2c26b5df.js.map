{"version":3,"sources":["webpack:///../src/actions/UseAction.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","table","of","ActionsRender","isMDXComponent"],"mappings":"8SAWaA,EAAe,Q,iOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,eADR,eAGA,mFAAkE,0BAAYC,WAAW,KAAvB,SAClE,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,scAoBL,kBACE,GAAM,cADR,cAGA,+CAA8B,0BAAYA,WAAW,KAAvB,kBAC9B,YAAC,IAAD,CAAOC,OAAO,EAAMC,GAAIC,IAAeJ,QAAQ,gB,+NAKnDH,EAAWQ,gBAAiB","file":"component---src-actions-use-action-mdx-5186dd10043c2c26b5df.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/xc/dev/digimaker-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Delete from './Delete';\nimport { ActionsRender } from '../ActionsRender';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"use-actions\"\n    }}>{`Use Actions`}</h1>\n    <p>{`Here is rendering actions(shown as icons/buttons first) in `}<inlineCode parentName=\"p\">{`Main`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import {ActionsRender} from 'digimaker-ui';\n\n//...\n// actionsConfig is a list of actions, supporting component and link\n<ActionsRender\n    actionProps={{\n        from: content,\n        params: {\n            content: content,\n            afterAction: (redirect: boolean) =>\n                afterAction(redirect),\n        } as ContentActionParams,\n        fromview: \"content\",\n    }}\n    actionsConfig={mainConfig.actions}\n/>\n//...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <p>{`Here are properties of `}<inlineCode parentName=\"p\">{`ActionsRender`}</inlineCode></p>\n    <Props table={true} of={ActionsRender} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}