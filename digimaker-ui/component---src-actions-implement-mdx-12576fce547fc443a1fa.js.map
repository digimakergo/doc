{"version":3,"sources":["webpack:///../src/actions/Implement.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","table","of","Delete","isMDXComponent"],"mappings":"4SAWaA,EAAe,Q,iOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,oBADR,oBAGA,6FAA4E,0BAAYC,WAAW,KAAvB,eAA5E,0BAA8J,0BAAYA,WAAW,KAAvB,WAC9J,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,yOAWL,kBACE,GAAM,eADR,eAGA,YAAC,IAAD,CAAOC,OAAO,EAAMC,GAAIC,IAAQJ,QAAQ,UACxC,kBACE,GAAM,uBADR,uBAGA,6BAAY,0BAAYC,WAAW,KAAvB,YAAZ,OAAwE,0BAAYA,WAAW,KAAvB,WAAxE,kBAA8I,0BAAYA,WAAW,KAAvB,UAA9I,wBACA,qBAAG,0BAAYA,WAAW,KAAvB,wBACH,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,6WAYL,kBACE,GAAM,oBADR,oBAGA,6BAAY,0BAAYA,WAAW,KAAvB,YAAZ,OAAwE,0BAAYA,WAAW,KAAvB,QAAxE,mCACA,qBAAG,0BAAYA,WAAW,KAAvB,qBACH,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,oW,+NAgBTJ,EAAWQ,gBAAiB","file":"component---src-actions-implement-mdx-12576fce547fc443a1fa.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/xc/dev/digimaker-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Delete from './Delete';\nimport { ActionProps } from '../ActionsRender';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"implement-action\"\n    }}>{`Implement action`}</h1>\n    <p>{`To implement an action, you need to create a component with props of `}<inlineCode parentName=\"p\">{`ActionProps`}</inlineCode>{`. Here is example from `}<inlineCode parentName=\"p\">{`Delete`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import {ActionProps, ContentActionParams} from 'digimaker-ui';\n\n\nconst Delete = (props:ActionProps) => {\n  const [shown, setShown] = React.useState(false);\n  const params = props.params as ContentActionParams;\n  //...\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"actionprops\"\n    }}>{`ActionProps`}</h3>\n    <Props table={true} of={Delete} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"action-from-content\"\n    }}>{`Action from content`}</h3>\n    <p>{`When `}<inlineCode parentName=\"p\">{`fromview`}</inlineCode>{` is `}<inlineCode parentName=\"p\">{`content`}</inlineCode>{`(from main) or `}<inlineCode parentName=\"p\">{`inline`}</inlineCode>{`(row_action in list)`}</p>\n    <p><inlineCode parentName=\"p\">{`ContentActionParams`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export interface ContentActionParams{\n   /** from object */\n   from?: any;//eg.{id:22}\n\n   /** content on */\n   content:any; //todo: define 'any'\n   /** After action callback. redirect is useful when deleting itself. Note that redirect will be ignore in inline mode(list row) so it's safe to call true */\n   afterAction: (redirect?: boolean)=>void;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"action-from-list\"\n    }}>{`Action from list`}</h3>\n    <p>{`When `}<inlineCode parentName=\"p\">{`fromview`}</inlineCode>{` is `}<inlineCode parentName=\"p\">{`list`}</inlineCode>{` - from list's tool(above list)`}</p>\n    <p><inlineCode parentName=\"p\">{`ListActionParams`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export interface ListActionParams{\n   /** selected content list */\n   selected: Array<any>; //todo: define any as content\n   /** config of the list, include eg. sort array */\n   listConfig: any; //todo: define\n\n   /** after action it will refresh list */\n   afterAction: (newConfig?:ListAfterActionConfig)=>void; //todo: define 'any'\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}