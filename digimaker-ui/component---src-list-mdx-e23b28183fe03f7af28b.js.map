{"version":3,"sources":["webpack:///../src/List.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","table","isToggle","of","List","__position","__code","__scope","Playground","Props","isMDXComponent"],"mappings":"+SAUaA,EAAe,Q,oNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,QADR,QAGA,oKACA,oDAAmC,0BAAYC,WAAW,KAAvB,WAAnC,KAA4F,0BAAYA,WAAW,KAAvB,QAA5F,KAAkJ,0BAAYA,WAAW,KAAvB,gBAAlJ,KAAgN,0BAAYA,WAAW,KAAvB,cAAhN,KACA,sEAAqD,0BAAYA,WAAW,KAAvB,WAArD,6BAAsI,0BAAYA,WAAW,KAAvB,eAAtI,0CAAwO,iBAAGA,WAAW,IAClP,KAAQ,oBAD4N,kBAAxO,KAEiC,iBAAGA,WAAW,IAC3C,KAAQ,uBADqB,wBAGjC,kBACE,GAAM,SADR,SAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,ogBAkBL,kBACE,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,OAAO,EAAMC,UAAU,EAAMC,GAAIC,IAAML,QAAQ,UACtD,kBACE,GAAM,eADR,eAGA,YAAC,IAAD,CAAYM,WAAY,EAAGC,OAAQ,WAAYC,SAAO,GACpDT,QACAH,kBACAa,eACAC,UACAL,UALoD,gBAMpDT,IANoD,EAOpDH,eAPoD,GAQnDO,QAAQ,cACZ,YAAC,IAAD,CAAMA,QAAQ,gB,kNAMjBH,EAAWc,gBAAiB","file":"component---src-list-mdx-e23b28183fe03f7af28b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/xc/dev/digimaker-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport List from './List';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"list\"\n    }}>{`List`}</h1>\n    <p>{`List is the component showing all under contents. It can be used for both location content(eg. article) and non-location content(eg. image)`}</p>\n    <p>{`A typical List use includes `}<inlineCode parentName=\"p\">{`columns`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`sort`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`sort_default`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`pagination`}</inlineCode>{`.`}</p>\n    <p>{`A list can have actions above the records(see `}<inlineCode parentName=\"p\">{`actions`}</inlineCode>{` property), or in row(see `}<inlineCode parentName=\"p\">{`row_actions`}</inlineCode>{` property). For more about actions see `}<a parentName=\"p\" {...{\n        \"href\": \"./actions/Config\"\n      }}>{`Config actions`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"./actions/Implement\"\n      }}>{`Implement an action`}</a></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Show article under 10, with \"name\", \"published\", \"modified\" columns\nconst listOption = {\n   contenttype: \"article\"\n   columns: [\"name\", \"published\", \"modified\"],\n   sort_default: [\"priority desc\", \"modified desc\"],\n   };\n<List id={10} {...listOption} />\n\n//Action with actions - link and component\nconst articleActions = [\n   {\"link\":\"/main/edit/{id}\", \"name\":\"edit\"},\n   (actionProps:ActionProps)=><Copy {...actionProps} />\n   ];\n<List id={10} {...listOption} row_actions={articleActions} />\n\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props table={true} isToggle={true} of={List} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<List />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      List,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n   <List mdxType=\"List\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}