{"version":3,"sources":["webpack:///../src/DMInit.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","table","of","DMInit","parentName","__position","__code","__scope","Playground","Props","isMDXComponent"],"mappings":"4SAUaA,EAAe,Q,sNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,UADR,UAGA,gIACA,iEACA,YAAC,IAAD,CAAOC,OAAO,EAAMC,GAAIC,IAAQH,QAAQ,UACxC,kBACE,GAAM,eADR,eAGA,uBAAK,oBAAMI,WAAW,MAClB,UAAa,eADZ,mjBAmBL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,GAAIC,SAAO,GAC5CR,QACAH,kBACAY,eACAC,UACAN,YAL4C,gBAM5CP,IAN4C,EAO5CH,eAP4C,GAQ3CO,QAAQ,qB,oNAMfH,EAAWa,gBAAiB","file":"component---src-dm-init-mdx-3bed5dfae9a17e33f279.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/xc/dev/digimaker-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport DMInit from './DMInit';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"dminit\"\n    }}>{`DMInit`}</h1>\n    <p>{`DMInit is a component which initializes digimaker-ui. All the rendering is suggested to be inside this.`}</p>\n    <p>{`DMInit can be put into App.tsx directly.`}</p>\n    <Props table={true} of={DMInit} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//set setting for inline/block mode\n<DMInit contenttypeSetting={(contenttype: string)=>{\n    if( contenttype == 'image' ){\n        return {inline_fields:[\"image\"], block_fields:[\"name\",\"image\"],browselist:{viewmode: 'block', columns:[\"name\"], sort_default:[[\"priority\", \"desc\"]] }};\n    }else{\n        return {inline_fields:[\"name\"],browselist:{viewmode: 'list', columns:[\"name\", \"published\"], sort_default:[[\"priority\", \"desc\"]] }}};\n    }\n}}>\n\n<div class=\"left\">\n    LEFT MENU\n</div>\n<div class=\"right\">\n    <Main />\n</div>\n</DMInit>\n`}</code></pre>\n    <Playground __position={1} __code={''} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      DMInit,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}