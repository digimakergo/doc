(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{e5nH:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return s})),n.d(t,"default",(function(){return b}));var i=n("Fcif"),o=n("+I+c"),r=(n("jSf3"),n("/FXl")),a=n("TjRS"),l=n("ZFoC"),p=n("rp5w"),c=(n("aD51"),["components"]),s={};void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!Object.prototype.hasOwnProperty.call(s,"__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/FieldTypes.mdx"}});var m={_frontmatter:s},d=a.a;function b(e){var t=e.components,n=Object(o.a)(e,c);return Object(r.b)(d,Object(i.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"field-types"},"Field types"),Object(r.b)("p",null,"Field types are component rending field in view(including inline) or edit mode. It's possible to have your own implemention of a field type."),Object(r.b)("h3",{id:"customize-your-field-type"},"Customize your field type"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},"//Put below when you start the app.\n\n//register an image fieldtype component\nFieldRegister.registerComponent( 'image', Image );\n\n//register a customize image component in article's cover_image(identifier)\nFieldRegister.register( 'article/cover_image', CoverImage )\n\n")),Object(r.b)("h3",{id:"implementation"},"Implementation"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},"const CustomField = (props:FieldtypeProps)=>{\n    //render in mode(edit/view/inline)\n}\n")),Object(r.b)("p",null,"Below is FieldtypeProps properties:"),Object(r.b)(l.d,{table:!0,isToggle:!0,of:p.a,mdxType:"Props"}))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!Object.prototype.hasOwnProperty.call(b,"__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/FieldTypes.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-field-types-mdx-1a685e1a154ce2c8fc15.js.map