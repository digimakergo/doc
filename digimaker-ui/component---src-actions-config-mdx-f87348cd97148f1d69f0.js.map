{"version":3,"sources":["webpack:///../src/actions/Config.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"oRAWaA,EAAe,Q,8NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,kBADR,kBAGA,wGACA,kBACE,GAAM,eADR,eAGA,gDACA,uBAAK,oBAAMC,WAAW,MAClB,UAAa,eADZ,0EAIL,kBACE,GAAM,QADR,QAGA,2CACA,sBACE,kBAAIA,WAAW,MAAf,0FAEE,0BAAYA,WAAW,MACrB,iBAAGA,WAAW,cAAd,wHAGJ,kBAAIA,WAAW,MAAf,SACE,kBAAIA,WAAW,MACb,kBAAIA,WAAW,MAAf,gBACA,kBAAIA,WAAW,MAAf,4CAIN,kBACE,GAAM,QADR,QAGA,mGACA,kBACE,GAAM,oBADR,oBAGA,mGAAkF,iBAAGA,WAAW,IAC5F,KAAQ,eADsE,uBAAlF,cAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,mD,4NAQTJ,EAAWK,gBAAiB","file":"component---src-actions-config-mdx-f87348cd97148f1d69f0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/xc/dev/digimaker-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Delete from './Delete';\nimport { ActionProps } from '../ActionsRender';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"config-actions\"\n    }}>{`Config actions`}</h1>\n    <p>{`digimaker-ui supports 2 types of actions, link and component for configuration.`}</p>\n    <h3 {...{\n      \"id\": \"link-action\"\n    }}>{`Link action`}</h3>\n    <p>{`Below is a link example`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const articleActions = [{\"link\":\"/main/edit/{id}\", \"name\":\"edit\"}];\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"link\"\n    }}>{`link`}</h4>\n    <p>{`variables of link:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`content/inline: properties of the content(if it's from content/inline)(eg. {id}.\nNote:`}\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`Note: special variable: {_contenttype_id} is contenttype with id(eg. image/10) - for non-location content mainly).`}</p>\n        </blockquote>\n      </li>\n      <li parentName=\"ul\">{`list: `}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`{_from_id}, `}</li>\n          <li parentName=\"ul\">{`{_from_list_contenttype} from 'list'.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h4 {...{\n      \"id\": \"name\"\n    }}>{`name`}</h4>\n    <p>{`a string which is show, or reactNode where you can have your own rendering`}</p>\n    <h3 {...{\n      \"id\": \"component-action\"\n    }}>{`Component action`}</h3>\n    <p>{`Here is an example of component action where everything is customized. See `}<a parentName=\"p\" {...{\n        \"href\": \"./Implement\"\n      }}>{`Implement an action`}</a>{` for more.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const articleActions = [Copy, Delete];\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}